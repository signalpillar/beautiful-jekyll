# -*- mode: org; -*-

#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="styles/bigblow/css/htmlize.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="styles/bigblow/css/bigblow.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="styles/bigblow/css/hideshow.css"/>

#+HTML_HEAD: <script type="text/javascript" src="styles/bigblow/js/jquery-1.11.0.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="styles/bigblow/js/jquery-ui-1.10.2.min.js"></script>

#+HTML_HEAD: <script type="text/javascript" src="styles/bigblow/js/jquery.localscroll-min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="styles/bigblow/js/jquery.scrollTo-1.4.3.1-min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="styles/bigblow/js/jquery.zclip.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="styles/bigblow/js/bigblow.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="styles/bigblow/js/hideshow.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="styles/lib/js/jquery.stickytableheaders.min.js"></script>

* signalpillar
**  mypy.ini                                                   :python:mypy:
The configuration that is not annoying and does the job.

#+BEGIN_SRC ini
	[mypy]
	warn_unused_ignores = True
	follow_imports = skip
	show_error_context = True
	warn_incomplete_stub = True
	ignore_missing_imports = True
	check_untyped_defs = True
	cache_dir = /dev/null
	# Cannot enable this one as we still allow defining functions without any types.
	# disallow_untyped_defs = True
	warn_redundant_casts = True
	warn_unused_configs = True
	strict_optional = True
#+END_SRC

**  tox & emacs                                                 :tox:python:

I am havy user of *tox*. Every new project has one and it is not only because I
can keep my dependencies and tools configuration in one place but also because I
have a nice integration with Emacs.

I press *f4* and select the test environment to use.

#+BEGIN_SRC elisp
  (global-set-key [f4] 'sp/tox/activate-current-project-tox-env)
#+END_SRC

Powerful combo of tox, projectile, and helm.

#+BEGIN_SRC elisp
(defun sp/tox/find-tox-dirs-in-project (project-root-dir)

  (defun -find-toxenv-bin-dirs (root)
    (projectile-files-via-ext-command
     root
     (format "find %s -type d -name 'bin' -path '*/.tox/*/bin' -print0" root)))

  (-map (lambda (file) (sp/path/parent-dir (sp/path/parent-dir file)))
        (-find-toxenv-bin-dirs project-root-dir)))

(defun sp/tox/activate-current-project-tox-env ()
  (interactive)
  (let* (
         (venv-dirs (sp/tox/find-tox-dirs-in-project (projectile-project-root)))
         (venv-dirs-length (length venv-dirs)))
    (progn
      (venv-set-location
       (if (> venv-dirs-length 1)
           (helm-comp-read "Choose tox directory to workon" venv-dirs)
         (if (= venv-dirs-length 0)
             (error "The project doesn't have created tox virtual environments.")
           (car venv-dirs))))
      (venv-workon)
      (add-to-list 'python-shell-extra-pythonpaths (projectile-project-root))
      (add-to-list 'python-shell-extra-pythonpaths (format "%s/src" (projectile-project-root)))
      )))
#+END_SRC

** Just another attempt
Another attempt to have a place to write short notes. In org-mode. Without tooling.

1. Update =index.org=
2. Export to HTML file. In spacemacs it is =,meehh=.
3. Push to github.

The theme for HTML page is [[https://github.com/fniessen/org-html-themes#bigblow][Bigblow]].
* Drafts
** TODO Another tool on my toolbelt                                 :python:
SCHEDULED: <2018-11-24 Sat>

[[https://github.com/ltworf/typedload][typedload]] is an amazing library that helps load/dump dictionary to the data
class or =typing.NamedTuple= with minimal effort. Without any additional
attributes just using pure type annotations it understands how to map the fields.
* Miscellaneous
** TODO Add About section to this page
